name: Run Tests

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    name: Run tests with coverage

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r torch-requirements.txt
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run tests with coverage
        env:
          PIXABAY_API_KEY: ${{ secrets.PIXABAY_API_KEY }}
        run: |
          pytest --cov=app --cov-report=term-missing --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          fail_ci_if_error: true

      - name: Upload test results to Codecov 
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload Allure results as artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-results
          path: allure-results/
          retention-days: 30

  allure-report:
    runs-on: ubuntu-latest
    needs: test   # âœ… fixed job dependency
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download all Allure results
        uses: actions/download-artifact@v4
        with:
          pattern: allure-results*
          path: allure-results-downloaded
          merge-multiple: false

      - name: Merge all results into single directory
        run: |
          mkdir -p allure-results
          for dir in allure-results-downloaded/*/; do
            if [ -d "$dir" ]; then
              cp -r "$dir"* allure-results/ 2>/dev/null || true
            fi
          done

      - name: Download existing allure history
        uses: actions/download-artifact@v4
        with:
          name: allure-history
          path: allure-history
        continue-on-error: true
          
      - name: Generate Allure Report
        uses: simple-elf/allure-report-action@master
        with:
          allure_results: allure-results
          allure_report: allure-report
          gh_pages: gh-pages
          allure_history: allure-history
          keep_reports: 20

      - name: Upload updated allure history
        uses: actions/upload-artifact@v4
        with:
          name: allure-history
          path: allure-history
          retention-days: 30
   
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.UI_TESTING_GITHUB_TOKEN2 }}
          publish_dir: allure-history
